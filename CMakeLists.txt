#cmake_minimum_required(VERSION 2.8)
cmake_minimum_required(VERSION 3.0.2)

project(tree_model CXX)
#project(XXX_name C)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -Wall")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall")

include (${CMAKE_SOURCE_DIR}/cmake/modules/coverage.cmake)
include (${CMAKE_SOURCE_DIR}/cmake/modules/sanitize.cmake)

# can't use because cmake currently has a
# bug the same filename in different directories
# yields collisions:
# http://public.kitware.com/Bug/view.php?id=12873
# -> using qt5_wrap_cpp() instead ...
#set(CMAKE_AUTOMOC ON)
# same goes for autouic ...
#set(CMAKE_AUTOUIC ON)

find_package(Qt5Core REQUIRED)
find_package(Qt5Widgets REQUIRED)
find_package(Qt5Test REQUIRED)
#find_package(LibXml2 REQUIRED)
find_package(Boost 1.55
    COMPONENTS
      unit_test_framework
      regex
      filesystem
      system
  REQUIRED)

add_subdirectory(libxxxml)

qt5_wrap_ui(EDITOR_UI
  editor/main_window.ui
  editor/subtree_window.ui
  editor/tree_widget.ui
  editor/slider_bar.ui
  editor/child_dialog.ui
  )

qt5_wrap_cpp(EDITOR_MOC
  editor/main_window.hh
  editor/subtree_window.hh
  editor/tree_widget.hh
  editor/slider_bar.hh
  editor/child_dialog.hh
  editor/command/open.hh
  editor/command/async_open.hh
  editor/command/save.hh
  editor/command/async_save.hh
  editor/command/remove.hh
  editor/gui_command/select_open.hh
  editor/gui_command/open.hh
  editor/gui_command/save.hh
  editor/gui_command/edit.hh
  editor/gui_command/add.hh
  editor/gui_command/clipboard_copy.hh
  editor/gui_command/clipboard_cut.hh
  editor/gui_command/clipboard_paste.hh
  editor/gui_command/display_subtree.hh
  editor/controller.hh
  editor/gui_controller.hh
  editor/arguments.hh
  editor/preview_file_dialog.hh
  editor/preview.hh
  editor/progress_dialog.hh
  editor/tree_view.hh
  editor/recent_menu.hh
  editor/instance.hh
  editor/instance_manager.hh
  )
qt5_wrap_cpp(TREE_MOC
  tree_model/item_adaptor.hh
  tree_model/base.hh
  tree_model/recorder.hh
  )
#qt5_wrap_cpp(UT_MOC
#  )
qt5_wrap_cpp(UT_SELECT_OPEN_MOC
  test/editor/gui_command/select_open.hh
  )

set(EDITOR_CC
  editor/main_window.cc
  editor/subtree_window.cc
  editor/tree_widget.cc
  editor/slider_bar.cc
  editor/child_dialog.cc
  editor/controller.cc
  editor/gui_controller.cc
  editor/vc_matchmaker.cc
  editor/recent_menu.cc
  editor/command/open.cc
  editor/command/async_open.cc
  editor/command/save.cc
  editor/command/async_save.cc
  editor/command/remove.cc
  editor/gui_command/open.cc
  editor/gui_command/select_open.cc
  editor/gui_command/save.cc
  editor/gui_command/edit.cc
  editor/gui_command/add.cc
  editor/gui_command/clipboard_copy.cc
  editor/gui_command/clipboard_cut.cc
  editor/gui_command/clipboard_paste.cc
  editor/gui_command/display_subtree.cc
  editor/arguments.cc
  editor/preview_file_dialog.cc
  editor/preview.cc
  editor/progress_dialog.cc
  editor/tree_view.cc
  editor/absolute_slider_style.cc
  editor/instance.cc
  editor/instance_manager.cc
  )
set(TREE_MODEL_CC
  tree_model/index.cc
  tree_model/base.cc
  tree_model/item_adaptor.cc
  tree_model/xml.cc
  tree_model/deep_model_index.cc
  tree_model/recorder.cc
  tree_model/operation/base.cc
  tree_model/operation/transaction.cc
  tree_model/operation/set_data.cc
  tree_model/operation/insert_rows.cc
  tree_model/operation/remove_rows.cc
  tree_model/util.cc
  )

add_executable(main
  editor/main.cc
  ${EDITOR_CC}
  ${TREE_MODEL_CC}
  ${EDITOR_MOC}
  ${TREE_MOC}
  ${EDITOR_UI}
  )
set_property(TARGET main PROPERTY INCLUDE_DIRECTORIES
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}/libxxxml
  # for autogenerated moc/ui files ...
  ${CMAKE_CURRENT_BINARY_DIR}
  ${Boost_INCLUDE_DIRS}
  ${XML2_INCLUDE_DIR}
  )
target_link_libraries(main
  ${Boost_FILESYSTEM_LIBRARY}
  ${Boost_SYSTEM_LIBRARY}
  ${Boost_REGEX_LIBRARY}
  ${XML2_LIB}
  xxxml_static
  Qt5::Widgets
  )

add_executable(ut
  test/main.cc
  test/test.cc
  test/list/ranked_list.cc
  test/tree_model/xml.cc
  test/tree_model/index.cc
  test/tree_model/item_adaptor.cc
  test/tree_model/deep_model_index.cc
  test/tree_model/recorder.cc
  test/tree_model/util.cc
  test/qt_model.cc

  test/editor/command/remove.cc
  test/editor/command/open.cc
  editor/command/remove.cc
  editor/command/open.cc
  ${CMAKE_CURRENT_BINARY_DIR}/editor/command/moc_remove.cpp
  ${CMAKE_CURRENT_BINARY_DIR}/editor/command/moc_open.cpp

  ${TREE_MODEL_CC}
  ${TREE_MOC}
  #${UT_MOC}
)
set_property(TARGET ut PROPERTY INCLUDE_DIRECTORIES
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}/Catch/single_include
  ${CMAKE_CURRENT_SOURCE_DIR}/libxxxml
  #${CMAKE_CURRENT_SOURCE_DIR}/list
  # for autogenerated moc/ui files ...
  ${CMAKE_CURRENT_BINARY_DIR}
  ${Boost_INCLUDE_DIRS}
  ${XML2_INCLUDE_DIR}
  )
target_link_libraries(ut
  ${Boost_FILESYSTEM_LIBRARY}
  ${Boost_SYSTEM_LIBRARY}
  ${Boost_REGEX_LIBRARY}
  ${XML2_LIB}
  xxxml_static
  Qt5::Core
  Qt5::Test
  )

add_executable(ut_select_open
  test/editor/gui_command/select_open.cc
  test/test.cc

  ${TREE_MODEL_CC}
  ${EDITOR_CC}

  ${UT_SELECT_OPEN_MOC}
  ${EDITOR_MOC}
  ${TREE_MOC}
  )
set_property(TARGET ut_select_open PROPERTY INCLUDE_DIRECTORIES
  ${CMAKE_CURRENT_SOURCE_DIR}/libxxxml
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${XML2_INCLUDE_DIR}
  )
target_link_libraries(ut_select_open
  Qt5::Core
  Qt5::Widgets
  Qt5::Test
  xxxml_static
  ${XML2_LIB}
  ${Boost_REGEX_LIBRARY}
  ${Boost_SYSTEM_LIBRARY}
  ${Boost_FILESYSTEM_LIBRARY}
  )

add_executable(ut_gui
  test/gui_main.cc
  test/test.cc
  test/qt_gui.cc
  test/editor/gui_command/save.cc
  test/editor/gui_command/edit.cc
  test/editor/gui_command/add.cc
  test/editor/gui_command/clipboard_copy.cc
  test/editor/gui_command/clipboard_cut.cc
  test/editor/gui_command/clipboard_paste.cc
  test/editor/gui_command/display_subtree.cc
  test/editor/recent_menu.cc
  test/editor/main_window.cc
  test/editor/slider_bar.cc
  test/editor/instance.cc
  test/editor/instance_manager.cc

  ${TREE_MODEL_CC}
  ${EDITOR_CC}

  ${EDITOR_MOC}
  ${EDITOR_UI}
  ${TREE_MOC}
  )
set_property(TARGET ut_gui PROPERTY INCLUDE_DIRECTORIES
  ${CMAKE_CURRENT_SOURCE_DIR}/libxxxml
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${XML2_INCLUDE_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}/Catch/single_include
  )
target_link_libraries(ut_gui
  Qt5::Core
  Qt5::Widgets
  Qt5::Test
  xxxml_static
  ${XML2_LIB}
  ${Boost_REGEX_LIBRARY}
  ${Boost_SYSTEM_LIBRARY}
  ${Boost_FILESYSTEM_LIBRARY}
  )

# for executing it from a quickfix environment
add_custom_target(check COMMAND ut)


